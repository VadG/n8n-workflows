{
  "active": false,
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Леночка",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram2": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Леночка",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Event with Attendee": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Event": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Events": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete Event": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Event": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Леночка",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Леночка": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Calendar": {
      "ai_tool": [
        [
          {
            "node": "Леночка",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-06-20T14:48:33.109Z",
  "id": "1G2glBbXJhiOxVfv",
  "meta": null,
  "name": "Lena Assist",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -460,
        240
      ],
      "id": "e14ad26c-0576-486d-8011-baeddd4c729a",
      "name": "Telegram Trigger",
      "webhookId": "825dc6b9-b9b1-4101-9fae-0e60e48a8973"
    },
    {
      "parameters": {
        "model": "qwen-qwq-32b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        400,
        460
      ],
      "id": "a312c54e-4428-4c37-9551-b0db22e6279c",
      "name": "Groq Chat Model",
      "credentials": {
        "groqApi": {
          "id": "e8XQzH2rKmblIb6s",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Switch').item.json.message.from.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1560,
        240
      ],
      "id": "d590bf78-4346-4374-b959-d15e5578b145",
      "name": "Telegram",
      "webhookId": "474b27a4-2489-4124-b525-5169da3808e6",
      "credentials": {
        "telegramApi": {
          "id": "T3oOrMS0wg7JFkXy",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c38b358-fe7a-4345-8b90-90f7fdcf9979",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "текст"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -240,
        240
      ],
      "id": "9de3c60c-f6df-4fc9-89a2-1dbd661acbef",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        0,
        0
      ],
      "id": "eecdbe85-98c2-405c-8bd4-059d66f7e8db",
      "name": "Telegram2",
      "webhookId": "be79fadb-b9e9-483e-af84-9c204c87882c"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        200,
        0
      ],
      "id": "93b3ac49-8767-4487-ad20-cdfd736ca609",
      "name": "OpenAI"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1e867643-a9ee-4a84-ba21-e3988a4f4432",
              "name": "message.text",
              "value": "={{ $json.message.text }}{{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        380,
        240
      ],
      "id": "29b4300c-2432-44f5-8764-40755f75c34a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "start": "={{ $fromAI(\"eventStart\") }}",
        "end": "={{ $fromAI(\"eventEnd\") }}",
        "additionalFields": {
          "attendees": [
            "={{ $fromAI(\"eventAttendeeEmail\") }}"
          ],
          "summary": "={{ $fromAI(\"eventTitle\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        640,
        460
      ],
      "id": "6013827b-2810-4793-a757-4aab8b4a22a9",
      "name": "Create Event with Attendee"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        800,
        460
      ],
      "id": "72de55ef-b556-4445-87de-0336d968d6f0",
      "name": "Create Event"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "timeMin": "={{ $fromAI(\"dayBefore\",\"the day before the date the user requested\") }}",
        "timeMax": "={{ $fromAI(\"dayAfter\",\"the day after the date the user requested\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        960,
        460
      ],
      "id": "afae5086-a890-4c21-bf22-5396169817f7",
      "name": "Get Events"
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1120,
        460
      ],
      "id": "4de35cff-e569-4764-942a-17eee2da230b",
      "name": "Delete Event"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "eventId": "={{ $fromAI(\"eventID\") }}",
        "updateFields": {
          "end": "={{ $fromAI(\"endTime\") }}",
          "start": "={{ $fromAI(\"startTime\") }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1260,
        460
      ],
      "id": "cc5e3c7d-a204-4b2b-8e27-f14a65dcebd0",
      "name": "Update Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "AKVnZp1NTZClY9sI",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Edit Fields').item.json.message.text }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        1420,
        460
      ],
      "id": "5c71c5cd-0d38-4f18-aa17-5ba42f4c04db",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Switch').item.json.message.text }}{{ $json.message.text }}",
        "options": {
          "systemMessage": "=Роль:\nТы — Леночка, умный и заботливый персональный ассистент.Ты виртуальная помощница, внедрённая в систему n8n и связана с календарём пользователя, его расписанием и поисковой системой tavily, задачами и другими утилитами. Обращайся к инструментам чтобы выполнить поставленную задачу и сравнить время и назначить встречу корректно.\n\nКонтекст:\nТы работаешь на владельца бизнесаю Твоя задача — облегчить его жизнь, упорядочить дела, предупреждать о важных событиях. Планировать и быть «мозгом-помощником», который думает вперёд. Ты управляешь расписанием через Google Calendar, интегрируешься с другими сервисами через n8n и знаешь, как работать в связке с автоматизациями.\n\n🎯 Твои задачи:\nУправление расписанием:\n\nСоздание, изменение, удаление встреч по запросу.\n\nПредупреждение о предстоящих событиях заранее.\n\nПеренос встреч при конфликте или просьбе.\n\nНапоминай, если важные задачи не закрыты в срок.\n\nПоиск в интернете\n\nПроактивная помощь:\n\nЕсли в календаре конфликт встреч — найди решение.\n\nОбщение:\n\nГоворишь легко, по-дружески. Без полотен текста.\n\nВсегда вежлива, без лишнего официоза.\n\n📋 Стиль общения:\nЯзык: дружелюбный, живой, без излишней строгости.\n\nСтруктура: чёткие, короткие ответы, но с заботой.\n\nЭмодзи — умеренно, чтобы оживить речь (по ситуации).\n\nОбращение на «ты»\n\nUse this tool to search the internet tavily\n\n**Calendar Management Tools**  \n   - Use \"Create Event with Attendee\" when an event includes a participant.  \n   - Use \"Create Event\" for solo events.   \n   - Use \"Get Events\" to fetch calendar schedules when requested.\n   - Use \"Delete Event\" to delete an event. You must use \"Get Events\" first to get the ID of the event to delete.\n   - Use \"Update Event\" to update an event. You must use \"Get Events\" first to get the ID of the event to update.\n\n## Final Notes\nHere is the current date/time: {{ $now }}\nIf a duration for an event isn't specified, assume it will be one hour.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.8,
      "position": [
        920,
        240
      ],
      "id": "50d7aa2e-0805-44b4-a859-82284b37c9a8",
      "name": "Леночка"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "orudjoff@gmail.com",
          "mode": "list",
          "cachedResultName": "orudjoff@gmail.com"
        },
        "eventId": "={{ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        1560,
        460
      ],
      "id": "93486a05-c2d3-4061-b155-0a4c43d4ce8c",
      "name": "Google Calendar"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-20T14:52:04.108Z",
      "updatedAt": "2025-06-20T14:52:04.108Z",
      "id": "ON71UVYrvCLFMtl1",
      "name": "imported_projects"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-06-20T14:52:06.000Z",
  "versionId": "3adff772-4e97-4cd2-864c-34425403c0e3"
}